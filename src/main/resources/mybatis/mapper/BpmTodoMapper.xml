<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zywx.appdo.flow.dao.impl.BpmTodoDaoImpl">
	<resultMap id="BaseResultMap" type="org.zywx.appdo.flow.entity.BpmTodo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="instanceid" property="instanceid" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="metaid" property="metaid" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="tenantId" property="tenantId" jdbcType="VARCHAR" />
		<result column="busiid" property="busiid" jdbcType="VARCHAR" />
		<result column="businessKey" property="businessKey" jdbcType="VARCHAR" />
		<result column="busipath" property="busipath" jdbcType="VARCHAR" />
		<result column="businame" property="businame" jdbcType="VARCHAR" />
		<result column="year" property="year" jdbcType="VARCHAR" />
		<result column="userId" property="userId" jdbcType="VARCHAR" />
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="isback" property="isback" jdbcType="VARCHAR" />
		<result column="isrevoke" property="isrevoke" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, title, code, instanceid, name, metaid, createtime, remark, tenantId,
		busiid,
		businessKey,year,userId,userName,isback,isrevoke
	</sql>
	<insert id="insert" parameterType="org.zywx.appdo.flow.entity.BpmTodo"
		useGeneratedKeys="true" keyProperty="id">
		insert into bpm_todo (title, code, instanceid,
		name, metaid, createtime,
		remark, tenantId, busiid,
		businessKey,year,userId,userName)
		values (#{title,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
		#{instanceid,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR}, #{metaid,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP},
		#{remark,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR},
		#{busiid,jdbcType=VARCHAR},
		#{businessKey,jdbcType=VARCHAR},#{year,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},#{userName,jdbcType=VARCHAR})
	</insert>
	<insert id="batchInsert" parameterType="java.util.List">
		insert into bpm_todo (title, code, instanceid,
		name, metaid, createtime,
		remark, tenantId, busiid,
		businessKey,year,userId,userName)values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.title,jdbcType=VARCHAR}, #{item.code,jdbcType=VARCHAR}, #{item.instanceid,jdbcType=VARCHAR},
			#{item.name,jdbcType=VARCHAR}, #{item.metaid,jdbcType=VARCHAR},
			#{item.createtime,jdbcType=TIMESTAMP},
			#{item.remark,jdbcType=VARCHAR}, #{item.tenantId,jdbcType=VARCHAR},
			#{item.busiid,jdbcType=VARCHAR},
			#{item.businessKey,jdbcType=VARCHAR},#{year,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},#{userName,jdbcType=VARCHAR})
		</foreach>
	</insert>
	<update id="update" parameterType="org.zywx.appdo.flow.entity.BpmTodo">
		update bpm_todo
		set title = #{title,jdbcType=VARCHAR},
		code = #{code,jdbcType=VARCHAR},
		instanceid = #{instanceid,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		metaid = #{metaid,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=TIMESTAMP},
		remark = #{remark,jdbcType=VARCHAR},
		busiid = #{busiid,jdbcType=VARCHAR},
		businessKey = #{businessKey,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
		and tenantId = #{tenantId,jdbcType=VARCHAR}
	</update>
	<!-- 更新 收回 被退回数据 -->
	<update id="updateMyProcInst" parameterType="java.util.Map">
		update bpm_todo set isback=#{isback},isrevoke=#{isrevoke} 
		where instanceid=#{prco_inset_id}
	</update>
	<delete id="deleteById" parameterType="java.util.Map">
		delete from bpm_todo
		where id = #{id,jdbcType=INTEGER}
		and tenantId = #{tenantId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByIds" parameterType="java.util.Map">
		delete from bpm_todo where tenantId = #{tenantId,jdbcType=BIGINT} AND
		id IN
		<foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<delete id="deleteByConditions" parameterType="java.util.Map">
		delete from bpm_todo
		<where>
			<include refid="conditionSql4Del" />
		</where>
	</delete>
	<select id="getById" resultMap="BaseResultMap" parameterType="java.util.Map">
		select * from bpm_todo a
		where a.id = #{id,jdbcType=INTEGER}
		and a.tenantId = #{tenantId,jdbcType=VARCHAR}
	</select>
	<select id="getByIds" resultMap="BaseResultMap" parameterType="java.util.Map">
		select * from bpm_todo a where a.tenantId =
		#{tenantId,jdbcType=BIGINT} AND a.id IN
		<foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>
	<select id="getPage" resultMap="BaseResultMap" parameterType="java.util.Map">
		select a.*,b.busipath,b.businame from bpm_todo a,meta_busi b
		<where>
			<include refid="conditionSql" />
		</where>
		order by ${sort} ${dir}
	</select>
	<select id="getByMap" resultMap="BaseResultMap" parameterType="java.util.Map">
		select a.*,b.busipath,b.businame from bpm_todo a,meta_busi b
		<where>
			<include refid="conditionSql" />
		</where>
		order by ${sort} ${dir}
	</select>
	
	<select id="getMyProcList" resultMap="BaseResultMap" parameterType="java.util.Map">
		select a.*,b.busipath,b.businame from bpm_todo a,meta_busi b
		where a.metaid=b.metaid and a.tenantId=b.tenantId and a.instanceid in 
		<foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			'${item}'
		</foreach>
	</select>
	
	<sql id="conditionSql">
		<if test="title != null and  title != '' ">
			and a.title = #{title}
		</if>
		<if test="code != null and  code != '' ">
			and a.code = #{code}
		</if>
		<if test="instanceid != null and  instanceid != '' ">
			and a.instanceid = #{instanceid}
		</if>
		<if test="name != null and  name != '' ">
			and a.name = #{name}
		</if>
		<if test="metaid != null and  metaid != '' ">
			and a.metaid = #{metaid}
		</if>
		<if test="createtime != null and  createtime != '' ">
			and a.createtime = #{createtime}
		</if>
		<if test="remark != null and  remark != '' ">
			and a.remark = #{remark}
		</if>
		<if test="tenantId != null and  tenantId != '' ">
			and a.tenantId = #{tenantId}
		</if>
		<if test="busiid != null and  busiid != '' ">
			and a.busiid = #{busiid}
		</if>
		<if test="businessKey != null and  businessKey != '' ">
			and a.businessKey = #{businessKey}
		</if>
		<if test="userId != null and  userId != '' ">
			and a.userId = #{userId}
		</if>
		<if test="userName != null and  userName != '' ">
			and a.userName = #{userName}
		</if>
		<if test="year != null and  year != '' ">
			and a.year = #{year}
		</if>
		<if test="isback != null and  isback != '0' ">
			and a.isback = #{isback}
		</if>
		<if test="isrevoke != null and  isrevoke != '0' ">
			and a.isrevoke = #{isrevoke}
		</if>
		and a.busiid = b.id
	</sql>
	<sql id="conditionSql4Del">
		<if test="title != null and  title != '' ">
			and title = #{title}
		</if>
		<if test="code != null and  code != '' ">
			and code = #{code}
		</if>
		<if test="instanceid != null and  instanceid != '' ">
			and instanceid = #{instanceid}
		</if>
		<if test="name != null and  name != '' ">
			and name = #{name}
		</if>
		<if test="metaid != null and  metaid != '' ">
			and metaid = #{metaid}
		</if>
		<if test="createtime != null and  createtime != '' ">
			and createtime = #{createtime}
		</if>
		<if test="remark != null and  remark != '' ">
			and remark = #{remark}
		</if>
		<if test="tenantId != null and  tenantId != '' ">
			and tenantId = #{tenantId}
		</if>
		<if test="busiid != null and  busiid != '' ">
			and busiid = #{busiid}
		</if>
		<if test="businessKey != null and  businessKey != '' ">
			and businessKey = #{businessKey}
		</if>
		<if test="userId != null and  userId != '' ">
			and userId = #{userId}
		</if>
		<if test="userName != null and  userName != '' ">
			and userName = #{userName}
		</if>
		<if test="year != null and  year != '' ">
			and year = #{year}
		</if>
	</sql>
</mapper>